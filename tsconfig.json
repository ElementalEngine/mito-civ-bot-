{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo",             /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true,   /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                  /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,              /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "ES2021",                               /* Use modern JavaScript features */
    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "jsx": "preserve",                              /* Specify what JSX code is generated. */
    // "libReplacement": true,                           /* Enable lib replacement. */
    // "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    // "jsxFactory": "",                               /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */
    // "jsxFragmentFactory": "",                       /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
    // "jsxImportSource": "",                          /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */
    // "reactNamespace": "",                           /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto",                      /* Control what method is used to detect module-format JS files. */

    /* Modules */
    "module": "ESNext",                              /* ESM output for modern bundlers */
    // "rootDir": "./",                                /* Specify the root folder within your source files. */
    // "moduleResolution": "node10",                   /* Specify how TypeScript looks up a file from a given module specifier. */
    "moduleResolution": "node",                       /* Use Node.js-style resolution */
    // "baseUrl": "./",                                /* Specify the base directory to resolve non-relative module names. */
    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
    // "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */
    // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
    // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
    // "allowImportingTsExtensions": true,               /* Allow imports to include TypeScript file extensions. */
    // "rewriteRelativeImportExtensions": true,          /* Rewrite TS file extensions in import paths to JS in output. */
    // "resolvePackageJsonExports": true,                /* Use package.json 'exports' field when resolving imports. */
    // "resolvePackageJsonImports": true,                /* Use package.json 'imports' field when resolving imports. */
    // "customConditions": [],                           /* Additional conditions for module resolution. */
    // "noUncheckedSideEffectImports": true,             /* Check side effect imports. */
    // "resolveJsonModule": true,                        /* Enable importing .json files. */
    // "allowArbitraryExtensions": true,                 /* Enable importing files with any extension. */
    // "noResolve": true,                                /* Disallow 'import's or 'require's from expanding file list. */

    /* JavaScript Support */
    // "allowJs": true,                                  /* Allow JavaScript files in your program. */
    // "checkJs": true,                                  /* Enable error reporting in JS files. */
    // "maxNodeModuleJsDepth": 1,                        /* Max folder depth for checking JS in node_modules. */

    /* Emit */
    // "declaration": true,                              /* Generate .d.ts files. */
    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
    // "emitDeclarationOnly": true,                      /* Only output d.ts files. */
    // "sourceMap": true,                                /* Create source map files. */
    // "inlineSourceMap": true,                          /* Include sourcemap files inside JS. */
    // "noEmit": true,                                   /* Disable emitting files. */
    // "outFile": "./",                                /* Bundle output into one file. */
    // "outDir": "./",                                 /* Specify output folder. */
    // "removeComments": true,                           /* Remove comments from output. */
    // "importHelpers": true,                            /* Import helper functions from tslib. */
    // "downlevelIteration": true,                       /* More compliant iteration output. */
    // "sourceRoot": "",                               /* Root path for debuggers. */
    // "mapRoot": "",                                  /* Location for map files. */
    // "inlineSources": true,                            /* Include source in maps. */
    // "emitBOM": true,                                  /* Emit UTF-8 BOM. */
    // "newLine": "crlf",                              /* Set newline style. */
    // "stripInternal": true,                            /* Skip emitting declarations with @internal. */
    // "noEmitHelpers": true,                           /* Disable generating helper functions. */
    // "noEmitOnError": true,                           /* Disable emit on errors. */
    // "preserveConstEnums": true,                      /* Disable removing const enums. */
    // "declarationDir": "./",                        /* Directory for declaration files. */

    /* Interop Constraints */
    // "isolatedModules": true,                         /* Single-file transpilation safety. */
    // "verbatimModuleSyntax": true,                    /* Preserve import/export syntax. */
    // "isolatedDeclarations": true,                    /* Require exports to enable declaration file gen. */
    // "erasableSyntaxOnly": true,                      /* Disallow non-ES syntax. */
    // "allowSyntheticDefaultImports": true,            /* Allow default imports from modules with no default. */
    "esModuleInterop": true,                           /* Additional JS for CommonJS support. */
    // "preserveSymlinks": true,                       /* Disable resolving symlinks to real paths. */
    "forceConsistentCasingInFileNames": true,          /* Ensure import casing matches files. */

    /* Type Checking */
    "strict": true,                                    /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                          /* Enable error reporting for expressions with implied any. */
    // "strictNullChecks": true,                       /* Strict null checking. */
    // "strictFunctionTypes": true,                    /* Check function assignability. */
    // "strictBindCallApply": true,                    /* Check bind/call/apply args. */
    // "strictPropertyInitialization": true,           /* Check for uninitialized class properties. */
    // "strictBuiltinIteratorReturn": true,            /* Use undefined for missing iterator returns. */
    // "noImplicitThis": true,                         /* Report errors on 'this' implicitly any. */
    // "useUnknownInCatchVariables": true,             /* Default catch clause variables to unknown. */
    // "alwaysStrict": true,                           /* Always emit 'use strict'. */
    // "noUnusedLocals": true,                         /* Report unused locals. */
    // "noUnusedParameters": true,                     /* Report unused parameters. */
    // "exactOptionalPropertyTypes": true,             /* Interpret optional properties precisely. */
    // "noImplicitReturns": true,                      /* Report missing return in code paths. */
    // "noFallthroughCasesInSwitch": true,             /* Report fall-through switch. */
    // "noUncheckedIndexedAccess": true,               /* Report potential undefined on index access. */
    // "noImplicitOverride": true,                     /* Require override keyword for overrides. */
    // "noPropertyAccessFromIndexSignature": true,     /* Enforce indexed access for index signatures. */
    // "allowUnusedLabels": true,                      /* Disable reporting unused labels. */
    // "allowUnreachableCode": true,                   /* Disable reporting unreachable code. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                    /* Skip type checking default lib declarations. */
    "skipLibCheck": true                               /* Skip type checking d.ts files. */
  }
}